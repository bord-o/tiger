
state 0:

	program : . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	program	goto 133
	exp	goto 3
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 1:

	exp : lvalue_exp .  (reduce by rule 24)
	lvalue : lvalue_exp .  (reduce by rule 52)
	lvalue_exp : lvalue_exp . LBRACK exp RBRACK 

	EOF	reduce by rule 24
	COMMA	reduce by rule 24
	SEMICOLON	reduce by rule 24
	RPAREN	reduce by rule 24
	LBRACK	shift 14
	RBRACK	reduce by rule 24
	RBRACE	reduce by rule 24
	DOT	reduce by rule 52
	PLUS	reduce by rule 24
	MINUS	reduce by rule 24
	TIMES	reduce by rule 24
	DIVIDE	reduce by rule 24
	EQ	reduce by rule 24
	NEQ	reduce by rule 24
	LT	reduce by rule 24
	LE	reduce by rule 24
	GT	reduce by rule 24
	GE	reduce by rule 24
	AND	reduce by rule 24
	OR	reduce by rule 24
	ASSIGN	reduce by rule 52
	THEN	reduce by rule 24
	ELSE	reduce by rule 24
	TO	reduce by rule 24
	DO	reduce by rule 24
	IN	reduce by rule 24
	END	reduce by rule 24
	FUNCTION	reduce by rule 24
	VAR	reduce by rule 24
	TYPE	reduce by rule 24


	.	error


state 2:

	exp : lvalue . ASSIGN exp 
	lvalue_exp : lvalue . DOT ID 

	DOT	shift 16
	ASSIGN	shift 15


	.	error


state 3:

	program : exp .  (reduce by rule 0)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 0


state 4:

	exp : NIL .  (reduce by rule 29)



	.	reduce by rule 29


state 5:

	exp : LET . decs IN optexp END 

	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	dec	goto 34
	decs	goto 33
	tydec	goto 32
	vardec	goto 31
	fundec	goto 30

	.	error


state 6:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 38


	.	error


state 7:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 39
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 8:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 40
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 9:

	exp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 41
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 10:

	exp : LPAREN . optexp RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	empty	goto 44
	exp	goto 43
	optexp	goto 42
	lvalue	goto 2
	lvalue_exp	goto 1

	.	reduce by rule 59


state 11:

	exp : STRING .  (reduce by rule 1)



	.	reduce by rule 1


state 12:

	exp : INT .  (reduce by rule 2)



	.	reduce by rule 2


state 13:

	exp : ID .  (reduce by rule 3)
	exp : ID . LBRACK exp RBRACK OF exp 
	exp : ID . LBRACE recordargs RBRACE 
	exp : ID . LPAREN explist RPAREN 
	lvalue : ID .  (reduce by rule 51)
	lvalue_exp : ID . LBRACK exp RBRACK 

	EOF	reduce by rule 3
	COMMA	reduce by rule 3
	SEMICOLON	reduce by rule 3
	LPAREN	shift 47
	RPAREN	reduce by rule 3
	LBRACK	shift 46
	RBRACK	reduce by rule 3
	LBRACE	shift 45
	RBRACE	reduce by rule 3
	DOT	reduce by rule 51
	PLUS	reduce by rule 3
	MINUS	reduce by rule 3
	TIMES	reduce by rule 3
	DIVIDE	reduce by rule 3
	EQ	reduce by rule 3
	NEQ	reduce by rule 3
	LT	reduce by rule 3
	LE	reduce by rule 3
	GT	reduce by rule 3
	GE	reduce by rule 3
	AND	reduce by rule 3
	OR	reduce by rule 3
	ASSIGN	reduce by rule 51
	THEN	reduce by rule 3
	ELSE	reduce by rule 3
	TO	reduce by rule 3
	DO	reduce by rule 3
	IN	reduce by rule 3
	END	reduce by rule 3
	FUNCTION	reduce by rule 3
	VAR	reduce by rule 3
	TYPE	reduce by rule 3


	.	error


state 14:

	lvalue_exp : lvalue_exp LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 48
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 15:

	exp : lvalue ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 49
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 16:

	lvalue_exp : lvalue DOT . ID 

	ID	shift 50


	.	error


state 17:

	exp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 51
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 18:

	exp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 52
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 19:

	exp : exp GE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 53
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 20:

	exp : exp GT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 54
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 21:

	exp : exp LE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 55
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 22:

	exp : exp LT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 56
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 23:

	exp : exp NEQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 57
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 24:

	exp : exp EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 58
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 25:

	exp : exp DIVIDE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 59
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 26:

	exp : exp TIMES . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 60
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 27:

	exp : exp MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 61
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 28:

	exp : exp PLUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 62
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 29:

	exp : exp SEMICOLON . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 63
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 30:

	dec : fundec .  (reduce by rule 39)



	.	reduce by rule 39


state 31:

	dec : vardec .  (reduce by rule 38)



	.	reduce by rule 38


state 32:

	dec : tydec .  (reduce by rule 37)



	.	reduce by rule 37


state 33:

	exp : LET decs . IN optexp END 
	decs : decs . dec 

	IN	shift 65
	FUNCTION	shift 37
	VAR	shift 36
	TYPE	shift 35

	dec	goto 64
	tydec	goto 32
	vardec	goto 31
	fundec	goto 30

	.	error


state 34:

	decs : dec .  (reduce by rule 35)



	.	reduce by rule 35


state 35:

	tydec : TYPE . ID EQ ty 

	ID	shift 66


	.	error


state 36:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 67


	.	error


state 37:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 68


	.	error


state 38:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 69


	.	error


state 39:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp . DO exp 
	exp : exp . SEMICOLON exp 

	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 70


	.	error


state 40:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 
	exp : exp . SEMICOLON exp 

	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	THEN	shift 71


	.	error


state 41:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : MINUS exp .  (reduce by rule 8)
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 



	.	reduce by rule 8


state 42:

	exp : LPAREN optexp . RPAREN 

	RPAREN	shift 72


	.	error


state 43:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	optexp : exp .  (reduce by rule 31)

	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 31


state 44:

	optexp : empty .  (reduce by rule 30)



	.	reduce by rule 30


state 45:

	exp : ID LBRACE . recordargs RBRACE 

	ID	shift 75

	empty	goto 74
	recordargs	goto 73

	.	reduce by rule 59


state 46:

	exp : ID LBRACK . exp RBRACK OF exp 
	lvalue_exp : ID LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 76
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 47:

	exp : ID LPAREN . explist RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	empty	goto 79
	exp	goto 78
	explist	goto 77
	lvalue	goto 2
	lvalue_exp	goto 1

	.	reduce by rule 59


state 48:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	lvalue_exp : lvalue_exp LBRACK exp . RBRACK 

	SEMICOLON	shift 29
	RBRACK	shift 80
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 49:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : lvalue ASSIGN exp .  (reduce by rule 25)
	exp : exp . SEMICOLON exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 25


state 50:

	lvalue_exp : lvalue DOT ID .  (reduce by rule 53)



	.	reduce by rule 53


state 51:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 16)
	exp : exp . SEMICOLON exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 16


state 52:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 15)
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 15


state 53:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 13)
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 13
	COMMA	reduce by rule 13
	SEMICOLON	reduce by rule 13
	RPAREN	reduce by rule 13
	RBRACK	reduce by rule 13
	RBRACE	reduce by rule 13
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 13
	OR	reduce by rule 13
	THEN	reduce by rule 13
	ELSE	reduce by rule 13
	TO	reduce by rule 13
	DO	reduce by rule 13
	IN	reduce by rule 13
	END	reduce by rule 13
	FUNCTION	reduce by rule 13
	VAR	reduce by rule 13
	TYPE	reduce by rule 13


	.	error


state 54:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 11)
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 11
	COMMA	reduce by rule 11
	SEMICOLON	reduce by rule 11
	RPAREN	reduce by rule 11
	RBRACK	reduce by rule 11
	RBRACE	reduce by rule 11
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 11
	OR	reduce by rule 11
	THEN	reduce by rule 11
	ELSE	reduce by rule 11
	TO	reduce by rule 11
	DO	reduce by rule 11
	IN	reduce by rule 11
	END	reduce by rule 11
	FUNCTION	reduce by rule 11
	VAR	reduce by rule 11
	TYPE	reduce by rule 11


	.	error


state 55:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 14)
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 14
	COMMA	reduce by rule 14
	SEMICOLON	reduce by rule 14
	RPAREN	reduce by rule 14
	RBRACK	reduce by rule 14
	RBRACE	reduce by rule 14
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 14
	OR	reduce by rule 14
	THEN	reduce by rule 14
	ELSE	reduce by rule 14
	TO	reduce by rule 14
	DO	reduce by rule 14
	IN	reduce by rule 14
	END	reduce by rule 14
	FUNCTION	reduce by rule 14
	VAR	reduce by rule 14
	TYPE	reduce by rule 14


	.	error


state 56:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 12)
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 12
	COMMA	reduce by rule 12
	SEMICOLON	reduce by rule 12
	RPAREN	reduce by rule 12
	RBRACK	reduce by rule 12
	RBRACE	reduce by rule 12
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 12
	OR	reduce by rule 12
	THEN	reduce by rule 12
	ELSE	reduce by rule 12
	TO	reduce by rule 12
	DO	reduce by rule 12
	IN	reduce by rule 12
	END	reduce by rule 12
	FUNCTION	reduce by rule 12
	VAR	reduce by rule 12
	TYPE	reduce by rule 12


	.	error


state 57:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 5)
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 5
	COMMA	reduce by rule 5
	SEMICOLON	reduce by rule 5
	RPAREN	reduce by rule 5
	RBRACK	reduce by rule 5
	RBRACE	reduce by rule 5
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 5
	OR	reduce by rule 5
	THEN	reduce by rule 5
	ELSE	reduce by rule 5
	TO	reduce by rule 5
	DO	reduce by rule 5
	IN	reduce by rule 5
	END	reduce by rule 5
	FUNCTION	reduce by rule 5
	VAR	reduce by rule 5
	TYPE	reduce by rule 5


	.	error


state 58:

	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 4)
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	EOF	reduce by rule 4
	COMMA	reduce by rule 4
	SEMICOLON	reduce by rule 4
	RPAREN	reduce by rule 4
	RBRACK	reduce by rule 4
	RBRACE	reduce by rule 4
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 4
	OR	reduce by rule 4
	THEN	reduce by rule 4
	ELSE	reduce by rule 4
	TO	reduce by rule 4
	DO	reduce by rule 4
	IN	reduce by rule 4
	END	reduce by rule 4
	FUNCTION	reduce by rule 4
	VAR	reduce by rule 4
	TYPE	reduce by rule 4


	.	error


state 59:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 9)
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 



	.	reduce by rule 9


state 60:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 6)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 



	.	reduce by rule 6


state 61:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 7)
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 7


state 62:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 10)
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 10


state 63:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	exp : exp SEMICOLON exp .  (reduce by rule 28)

	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 28


state 64:

	decs : decs dec .  (reduce by rule 36)



	.	reduce by rule 36


state 65:

	exp : LET decs IN . optexp END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	empty	goto 44
	exp	goto 43
	optexp	goto 81
	lvalue	goto 2
	lvalue_exp	goto 1

	.	reduce by rule 59


state 66:

	tydec : TYPE ID . EQ ty 

	EQ	shift 82


	.	error


state 67:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 84
	ASSIGN	shift 83


	.	error


state 68:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 85


	.	error


state 69:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 86
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 70:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 87
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 71:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 88
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 72:

	exp : LPAREN optexp RPAREN .  (reduce by rule 27)



	.	reduce by rule 27


state 73:

	exp : ID LBRACE recordargs . RBRACE 

	RBRACE	shift 89


	.	error


state 74:

	recordargs : empty .  (reduce by rule 56)



	.	reduce by rule 56


state 75:

	recordargs : ID . EQ exp 
	recordargs : ID . EQ exp COMMA recordargs 

	EQ	shift 90


	.	error


state 76:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp . RBRACK OF exp 
	exp : exp . SEMICOLON exp 
	lvalue_exp : ID LBRACK exp . RBRACK 

	SEMICOLON	shift 29
	RBRACK	shift 91
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 77:

	exp : ID LPAREN explist . RPAREN 

	RPAREN	shift 92


	.	error


state 78:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	explist : exp .  (reduce by rule 33)
	explist : exp . COMMA explist 

	COMMA	shift 93
	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 33


state 79:

	explist : empty .  (reduce by rule 32)



	.	reduce by rule 32


state 80:

	lvalue_exp : lvalue_exp LBRACK exp RBRACK .  (reduce by rule 54)



	.	reduce by rule 54


state 81:

	exp : LET decs IN optexp . END 

	END	shift 94


	.	error


state 82:

	tydec : TYPE ID EQ . ty 

	ID	shift 98
	LBRACE	shift 97
	ARRAY	shift 96

	ty	goto 95

	.	error


state 83:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 99
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 84:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 100


	.	error


state 85:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 103

	empty	goto 102
	tyfields	goto 101

	.	reduce by rule 59


state 86:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 
	exp : exp . SEMICOLON exp 

	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	TO	shift 104


	.	error


state 87:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp DO exp .  (reduce by rule 23)
	exp : exp . SEMICOLON exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 23


state 88:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 22)
	exp : exp . SEMICOLON exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	ELSE	shift 105


	.	reduce by rule 22


state 89:

	exp : ID LBRACE recordargs RBRACE .  (reduce by rule 18)



	.	reduce by rule 18


state 90:

	recordargs : ID EQ . exp 
	recordargs : ID EQ . exp COMMA recordargs 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 106
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 91:

	exp : ID LBRACK exp RBRACK . OF exp 
	lvalue_exp : ID LBRACK exp RBRACK .  (reduce by rule 55)

	OF	shift 107


	.	reduce by rule 55


state 92:

	exp : ID LPAREN explist RPAREN .  (reduce by rule 19)



	.	reduce by rule 19


state 93:

	explist : exp COMMA . explist 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	empty	goto 79
	exp	goto 78
	explist	goto 108
	lvalue	goto 2
	lvalue_exp	goto 1

	.	reduce by rule 59


state 94:

	exp : LET decs IN optexp END .  (reduce by rule 26)



	.	reduce by rule 26


state 95:

	tydec : TYPE ID EQ ty .  (reduce by rule 40)



	.	reduce by rule 40


state 96:

	ty : ARRAY . OF ID 

	OF	shift 109


	.	error


state 97:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 103

	empty	goto 102
	tyfields	goto 110

	.	reduce by rule 59


state 98:

	ty : ID .  (reduce by rule 41)



	.	reduce by rule 41


state 99:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 47)

	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 47


state 100:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 111


	.	error


state 101:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 112


	.	error


state 102:

	tyfields : empty .  (reduce by rule 44)



	.	reduce by rule 44


state 103:

	tyfields : ID . COLON ID COMMA tyfields 
	tyfields : ID . COLON ID 

	COLON	shift 113


	.	error


state 104:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 114
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 105:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 115
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 106:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	recordargs : ID EQ exp .  (reduce by rule 57)
	recordargs : ID EQ exp . COMMA recordargs 

	COMMA	shift 116
	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 57


state 107:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 117
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 108:

	explist : exp COMMA explist .  (reduce by rule 34)



	.	reduce by rule 34


state 109:

	ty : ARRAY OF . ID 

	ID	shift 118


	.	error


state 110:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 119


	.	error


state 111:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 120
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 112:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 122
	EQ	shift 121


	.	error


state 113:

	tyfields : ID COLON . ID COMMA tyfields 
	tyfields : ID COLON . ID 

	ID	shift 123


	.	error


state 114:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 
	exp : exp . SEMICOLON exp 

	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 124


	.	error


state 115:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 21)
	exp : exp . SEMICOLON exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 21


state 116:

	recordargs : ID EQ exp COMMA . recordargs 

	ID	shift 75

	empty	goto 74
	recordargs	goto 125

	.	reduce by rule 59


state 117:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 17)
	exp : exp . SEMICOLON exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 17


state 118:

	ty : ARRAY OF ID .  (reduce by rule 43)



	.	reduce by rule 43


state 119:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 42)



	.	reduce by rule 42


state 120:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 48)

	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 48


state 121:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 126
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 122:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 127


	.	error


state 123:

	tyfields : ID COLON ID . COMMA tyfields 
	tyfields : ID COLON ID .  (reduce by rule 46)

	COMMA	shift 128


	.	reduce by rule 46


state 124:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 129
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 125:

	recordargs : ID EQ exp COMMA recordargs .  (reduce by rule 58)



	.	reduce by rule 58


state 126:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 49)

	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 49


state 127:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 130


	.	error


state 128:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 103

	empty	goto 102
	tyfields	goto 131

	.	reduce by rule 59


state 129:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 20)
	exp : exp . SEMICOLON exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 20


state 130:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	NIL	shift 4

	exp	goto 132
	lvalue	goto 2
	lvalue_exp	goto 1

	.	error


state 131:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 45)



	.	reduce by rule 45


state 132:

	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . PLUS exp 
	exp : exp . GT exp 
	exp : exp . LT exp 
	exp : exp . GE exp 
	exp : exp . LE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp . SEMICOLON exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 50)

	SEMICOLON	shift 29
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 50


state 133:


	EOF	accept


	.	error

552 of 1029 action table entries left after compaction
137 goto table entries
